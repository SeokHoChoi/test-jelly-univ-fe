import { NextRequest, NextResponse } from 'next/server';

// 임시 품종 데이터 (추후 실제 API로 교체 가능)
const DOG_BREEDS = [
  // 대형견
  '골든 리트리버', '래브라도 리트리버', '저먼 셰퍼드', '로트와일러', '도베르만',
  '그레이트 데인', '세인트 버나드', '마스티프', '불마스티프', '버니즈 마운틴 독',
  '아키타', '차우차우', '샤페이', '아프간 하운드', '보르조이',
  '아이리시 울프하운드', '스코티시 디어하운드', '그레이하운드', '위펫', '살루키',
  '로디지안 리지백', '바센지', '아프리카니스', '캉갈', '아나톨리안 셰퍼드',
  '캉가르 독', '코모도르', '쿠바스', '레온베르거', '뉴펀들랜드',
  '그레이트 피레니즈', '마레마 셰퍼드 독', '티베탄 마스티프', '불독', '아메리칸 불독',
  '올드 잉글리시 불독', '프렌치 불독', '보스턴 테리어', '미니어처 불독', '미니어처 핀셔',

  // 중형견
  '비글', '보더 콜리', '오스트레일리안 셰퍼드', '오스트레일리안 켈피', '오스트레일리안 테리어',
  '잉글리시 코커 스패니얼', '아메리칸 코커 스패니얼', '스프링어 스패니얼', '웰시 스프링어 스패니얼', '클럼버 스패니얼',
  '코기', '웰시 코기', '카디건 웰시 코기', '펨브로크 웰시 코기', '셰틀랜드 쉽독',
  '아메리칸 스태퍼드셔 테리어', '스태퍼드셔 불테리어', '아메리칸 불테리어', '미니어처 불테리어', '불테리어',
  '잭 러셀 테리어', '파슨 러셀 테리어', '스카이 테리어', '스코티시 테리어', '웨스트 하이랜드 화이트 테리어',
  '케언 테리어', '실키 테리어', '요크셔 테리어', '오스트레일리안 실키 테리어', '노리치 테리어',
  '노퍽 테리어', '보더 테리어', '레이크랜드 테리어', '웰시 테리어', '아이리시 테리어',
  '케리 블루 테리어', '소프트 코티드 휘튼 테리어', '아이리시 소프트 코티드 휘튼 테리어', '베들링턴 테리어', '덴디 딘몬트 테리어',
  '시베리안 허스키', '알래스칸 말라뮤트', '사모예드', '아메리칸 에스키모 독', '그린란드 독',
  '캐나디안 에스키모 독', '핀란드 스피츠', '노르웨이안 엘크하운드', '스웨덴 발하운드', '노르웨이안 부훈드',
  '아이슬란드 독', '라포니안 허더', '핀란드 라포니안 독', '스웨덴 라포니안 독', '노르웨이안 라포니안 독',

  // 소형견
  '말티즈', '푸들', '치와와', '포메라니안', '요크셔 테리어',
  '비숑 프리제', '하바니즈', '볼로네즈', '코톤 드 튤레어', '라사 압소',
  '시추', '페키니즈', '티베탄 스패니얼', '티베탄 테리어', '티베탄 마스티프',
  '차이니즈 크레스티드', '차이니즈 크레스티드 퍼플', '차이니즈 크레스티드 헤어리스', '차이니즈 크레스티드 파우더 퍼플', '차이니즈 크레스티드 파우더 퍼플 헤어리스',
  '퍼그', '프렌치 불독', '보스턴 테리어', '미니어처 핀셔', '아펜핀셔',
  '미니어처 슈나우저', '스탠다드 슈나우저', '자이언트 슈나우저', '아펜핀셔', '아펜핀셔',
  '브뤼셀 그리펀', '벨지안 그리펀', '페티 브라반콘', '스모우스헨드', '아펜핀셔',
  '이탈리안 그레이하운드', '휘펫', '보르조이', '아프간 하운드', '살루키',
  '아이비잔 하운드', '포르투갈 포덴고', '포르투갈 포덴고 그란데', '포르투갈 포덴고 메디오', '포르투갈 포덴고 페켄요',
  '스페인 그레이하운드', '갈고 에스파뇰', '포드렌코 이비센코', '포드렌코 카나리오', '포드렌코 이비센코',

  // 한국 견종
  '진돗개', '삽살개', '풍산개', '제주개', '진도개',
  '동경이', '풍산개', '삽살개', '제주개', '진돗개',
  '한국 토종견', '한국 시바견', '한국 진돗개', '한국 삽살개', '한국 풍산개',

  // 믹스견 (귀여운 이름들)
  '골든도라', '골든푸들', '골든코기', '골든비숑', '골든말티즈',
  '푸들골든', '푸들비숑', '푸들말티즈', '푸들코기', '푸들치와와',
  '비숑골든', '비숑푸들', '비숑말티즈', '비숑코기', '비숑치와와',
  '말티즈골든', '말티즈푸들', '말티즈비숑', '말티즈코기', '말티즈치와와',
  '코기골든', '코기푸들', '코기비숑', '코기말티즈', '코기치와와',
  '치와와골든', '치와와푸들', '치와와비숑', '치와와말티즈', '치와와코기',
  '포메라니안골든', '포메라니안푸들', '포메라니안비숑', '포메라니안말티즈', '포메라니안코기',
  '시바골든', '시바푸들', '시바비숑', '시바말티즈', '시바코기',
  '비글골든', '비글푸들', '비글비숑', '비글말티즈', '비글코기',
  '허스키골든', '허스키푸들', '허스키비숑', '허스키말티즈', '허스키코기',
  '래브라도골든', '래브라도푸들', '래브라도비숑', '래브라도말티즈', '래브라도코기',
  '믹스견', '하이브리드', '크로스브리드', '반려견', '우리 강아지',
  '사랑스러운 믹스', '귀여운 믹스', '달콤한 믹스', '사랑스러운 강아지', '귀여운 강아지',
  '달콤한 강아지', '사랑스러운 반려견', '귀여운 반려견', '달콤한 반려견', '우리 가족 강아지',

  // 기타 인기 견종
  '달마시안', '바셋 하운드', '비글', '블러드하운드', '아프간 하운드',
  '아이리시 세터', '고든 세터', '잉글리시 세터', '아이리시 레드 앤 화이트 세터', '아이리시 레드 앤 화이트 세터',
  '포인터', '잉글리시 포인터', '아이리시 포인터', '아이리시 레드 앤 화이트 포인터', '아이리시 레드 앤 화이트 포인터',
  '비즐라', '바이마라너', '체코슬로바키아 늑대개', '사를로스 늑대개', '타마스칸',
  '우타나간', '체코슬로바키아 늑대개', '사를로스 늑대개', '타마스칸', '우타나간',
  '아메리칸 아키타', '아키타', '시바견', '진돗개', '삽살개',
  '풍산개', '제주개', '진도개', '동경이', '한국 토종견',
  '한국 시바견', '한국 진돗개', '한국 삽살개', '한국 풍산개', '한국 제주개'
];

export async function GET(request: NextRequest) {
  try {
    const { searchParams } = new URL(request.url);
    const query = searchParams.get('q') || '';

    // 검색어가 없으면 빈 배열 반환
    if (!query.trim()) {
      return NextResponse.json({
        success: true,
        data: [],
        total: 0,
      });
    }

    // 검색어와 일치하는 품종 필터링 (대소문자 구분 없음)
    const filteredBreeds = DOG_BREEDS.filter(breed =>
      breed.toLowerCase().includes(query.toLowerCase())
    ).slice(0, 10); // 최대 10개만 반환

    return NextResponse.json({
      success: true,
      data: filteredBreeds,
      total: filteredBreeds.length,
    }, {
      status: 200,
      headers: {
        'Cache-Control': 'public, s-maxage=300, stale-while-revalidate=600',
      },
    });
  } catch (error) {
    console.error('품종 검색 API 에러:', error);

    return NextResponse.json(
      {
        success: false,
        error: '품종 검색 중 오류가 발생했습니다.',
        data: [],
        total: 0,
      },
      { status: 500 }
    );
  }
}
